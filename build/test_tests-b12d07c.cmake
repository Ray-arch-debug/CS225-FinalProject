add_test( test /workspaces/cs225/CS225-FinalProject/build/test test  )
set_tests_properties( test PROPERTIES WORKING_DIRECTORY /workspaces/cs225/CS225-FinalProject/build)
add_test( [==[KDTree::testSmallerDimVal Tests]==] /workspaces/cs225/CS225-FinalProject/build/test [==[KDTree::testSmallerDimVal Tests]==]  )
set_tests_properties( [==[KDTree::testSmallerDimVal Tests]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225/CS225-FinalProject/build)
add_test( [==[KDTree::shouldReplace Tests]==] /workspaces/cs225/CS225-FinalProject/build/test [==[KDTree::shouldReplace Tests]==]  )
set_tests_properties( [==[KDTree::shouldReplace Tests]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225/CS225-FinalProject/build)
add_test( [==[KDTree::findNearestNeighbor (2D), returns correct result]==] /workspaces/cs225/CS225-FinalProject/build/test [==[KDTree::findNearestNeighbor (2D)\, returns correct result]==]  )
set_tests_properties( [==[KDTree::findNearestNeighbor (2D), returns correct result]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225/CS225-FinalProject/build)
add_test( [==[KDTree::findNearestNeighbor (2D), testing correct path]==] /workspaces/cs225/CS225-FinalProject/build/test [==[KDTree::findNearestNeighbor (2D)\, testing correct path]==]  )
set_tests_properties( [==[KDTree::findNearestNeighbor (2D), testing correct path]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225/CS225-FinalProject/build)
add_test( [==[KDTree::findNearestNeighbor (2D), testing correct path with fence jumping]==] /workspaces/cs225/CS225-FinalProject/build/test [==[KDTree::findNearestNeighbor (2D)\, testing correct path with fence jumping]==]  )
set_tests_properties( [==[KDTree::findNearestNeighbor (2D), testing correct path with fence jumping]==] PROPERTIES WORKING_DIRECTORY /workspaces/cs225/CS225-FinalProject/build)
set( test_TESTS test [==[KDTree::testSmallerDimVal Tests]==] [==[KDTree::shouldReplace Tests]==] [==[KDTree::findNearestNeighbor (2D), returns correct result]==] [==[KDTree::findNearestNeighbor (2D), testing correct path]==] [==[KDTree::findNearestNeighbor (2D), testing correct path with fence jumping]==])
